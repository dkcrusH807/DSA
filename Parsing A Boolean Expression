def parseBoolExpr(self, expression):
        st=[]
        for ch in expression:
            if ch==",":
                continue
            elif ch!=")":
                st.append(ch)
            else:
                vals=[]
                while st[-1]!="(":
                    vals.append(st.pop())
                st.pop()
                op=st.pop()
                if op=="!":
                    st.append('t' if vals[0]=='f' else 'f')
                elif op=="&":
                    st.append('t' if all(v=='t' for v in vals) else 'f')
                elif op=="|":
                    st.append('t' if any(v=='t' for v in vals) else 'f')
        return st[-1]=='t'
